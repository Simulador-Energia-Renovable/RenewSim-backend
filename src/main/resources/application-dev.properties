# =============================
# DATASOURCE (MySQL Local)
# =============================
spring.datasource.url=jdbc:mysql://localhost:3306/renewsim?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
spring.datasource.username=${DATABASE_USERNAME}
spring.datasource.password=${DATABASE_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# =============================
# JPA / Hibernate
# =============================
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# =============================
# HikariCP
# =============================
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.connection-timeout=30000
# Opcional para debugging de conexiones retenidas:
# spring.datasource.hikari.leak-detection-threshold=20000

# =============================
# H2 CONSOLE (solo dev)
# =============================
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# =============================
# LOGGING (dev)
# =============================
logging.level.org.springframework.security=DEBUG
# Muestra nuestros logs de auditoría en dev (puedes subir a WARN en prod)
logging.level.AUTH_AUDIT=INFO
# Añade correlationId desde MDC en el nivel (si usas Logback no-JSON):
logging.pattern.level=%5p [corr=%X{correlationId}]

# =============================
# SERVER (cabeceras, proxy, etc.)
# =============================
server.forward-headers-strategy=framework

# =============================
# JWT (alineado con SecurityJwtProperties)
# =============================
security.jwt.issuer=renewsim-auth-dev
security.jwt.audience=renewsim-app-dev
# Recomendado: clave BASE64 (>= 256 bits antes de codificar)
security.jwt.secretBase64=${JWT_SECRET_BASE64:VGhpcy1pcy1hLWRldmVsb3BtZW50LXNlY3JldC1zaG91bGQtYmUtMzItY2hhcmFjdGVycy1sb25nIQ==}
security.jwt.expiration-seconds=3600
security.jwt.not-before-skew-seconds=0
security.jwt.allowed-clock-skew-seconds=60
# Alternativa en local si prefieres texto plano (>=32 chars reales):
# security.jwt.secret=${JWT_SECRET_PLAINTEXT:0123456789abcdef0123456789abcdef}

# =============================
# CORS (centralizado)
# =============================
cors.enabled=true
# Para .properties usa comas:
cors.allowed-origins=http://localhost:5173,http://127.0.0.1:5173
cors.allowed-methods=GET,POST,PUT,DELETE,PATCH,OPTIONS
cors.allowed-headers=Content-Type,Authorization,X-Requested-With,X-Correlation-Id
# MUY IMPORTANTE para que el frontend pueda leer la cabecera:
cors.exposed-headers=X-Correlation-Id
cors.allow-credentials=true
cors.max-age-seconds=3600

# =============================
# RATE LIMITING (Brute-force guard)
# =============================
# Usa el mismo prefijo que tu binder (recomendado: security.rate-limiting)
security.rate-limiting.enabled=true
security.rate-limiting.strategy=IP_USER
security.rate-limiting.max-attempts=3
security.rate-limiting.window-seconds=15
security.rate-limiting.retry-after-seconds=15
security.rate-limiting.login-path=/api/v1/auth/login

# =============================
# ACTUATOR (dev)
# =============================
management.endpoints.web.exposure.include=health,info


